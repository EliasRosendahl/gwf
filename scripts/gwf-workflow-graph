#!/Users/mailund/anaconda/bin/python

import os
import sys
from gwf.parser import parse


import argparse

parser = argparse.ArgumentParser(description='Show a workflow graph.')

parser.add_argument('-f', '--file', 
                    default='workflow.gwf', dest='workflow_file',
                    help='Workflow file if not the default (workflow.gwf).')

parser.add_argument('output', nargs='?', default='workflow.dot', 
					help='File to write the workflow graph to.')

args = parser.parse_args()

workflow = parse(args.workflow_file)


# FIXME: ERROR HANDLING
out = open(args.output, 'w')

print >> out, 'digraph workflow {'

# Handle nodes
for name,target in workflow.targets.items():
	print >> out, name, ';'

# Handle system files
for name,target in workflow.targets.items():
	for infile in target.input:
		if infile not in workflow.providers:
			print >> out, '"file : %s"' % infile,
			print >> out, '[style=filled, color=gray]';
		
# Handle dependency edges	
for name,target in workflow.targets.items():
	for infile in target.input:
		if infile in workflow.providers:
			print >> out, name, '->', workflow.providers[infile].name, 
			print >> out, '[label="%s"]' % infile,
			print >> out, ';'
		else:
			print >> out, name, '->', '"file : %s"' % infile
			print >> out, '[label="%s"]' % infile,
			print >> out, ';'
	
print >> out, '}' # end of the graph.
