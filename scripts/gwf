import sys

import begin
from gwf.backends.base import get_backends
from gwf.core import PreparedWorkflow
from gwf.exceptions import GWFError
from gwf.utils import import_object

BEGIN_OPTS = {
    'plugins': 'gwf.plugins',
    'env_prefix': 'GWF_',
    'config_file': '.gwfrc',
    'config_section': 'gwf',
}


def error(msg):
    print("[Error]", msg)
    sys.exit(1)


@begin.subcommand
def clean():
    print(begin.context.last_return)


@begin.subcommand
def status():
    print(begin.context.last_return)


@begin.subcommand
def config():
    print(begin.context.last_return)


@begin.start(**BEGIN_OPTS)
@begin.logging
def main(file='workflow.py:gwf', backend='local', dry_run=False):
    """A flexible, pragmatic workflow tool."""

    backends = get_backends()
    try:
        workflow = import_object(file)
        prepared_workflow = PreparedWorkflow(workflow)
    except GWFError as e:
        error(e)
    return prepared_workflow
